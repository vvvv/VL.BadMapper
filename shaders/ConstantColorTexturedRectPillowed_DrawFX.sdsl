shader ConstantColorTexturedRectPillowed_DrawFX : ConstantColor_DrawFX, Texturing
{
    float Pillow = 0.5f;

    float rectangle(float2 samplePosition, float2 halfSize)
    {
        float2 componentWiseEdgeDistance = abs(samplePosition) - halfSize;
        float outsideDistance = length(max(componentWiseEdgeDistance, 0));
        float insideDistance = min(max(componentWiseEdgeDistance.x, componentWiseEdgeDistance.y), 0);
        return outsideDistance + insideDistance;
    }

    float sdBox(float2 p, float2 b)
{
    float2 d = abs(p)-b;
    return length(max(d,0.0)) + min(max(d.x,d.y),0.0);
}

    override stage void PSMain() 
    {
        float2 uv = streams.TexCoord;
        float4 color = Texture0.Sample(LinearSampler, uv) * ColorInput;
        color.a = smoothstep(0, Pillow, abs(sdBox(uv-0.5, float2(0.5f, 0.5f))));
        streams.ColorTarget = color;
    }
};